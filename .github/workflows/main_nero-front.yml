name: Deploy Next.js with Vanilla Extract to Azure Web App - nero-frontend

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # ✅ 1. 저장소 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4

      # ✅ 2. Node.js 설정
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # ✅ 3. Node_modules 캐싱 (속도 향상)
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # ✅ 4. 의존성 설치
      - name: Install Dependencies
        run: npm ci

      # ✅ 5. 환경 변수 주입 (GitHub Secrets 사용)
      - name: Create .env file
        run: |
          echo "NEXT_PUBLIC_API_BASE_URL=${{ secrets.NEXT_PUBLIC_API_BASE_URL }}" >> .env
          echo "NEXT_PUBIC_CSRF_PROTECTION=${{ secrets.NEXT_PUBIC_CSRF_PROTECTION }}" >> .env
          cat .env

      # ✅ 6. Next.js 빌드 (Vanilla Extract 포함)
      - name: Build Next.js with Vanilla Extract
        run: npm run build

      # ✅ 7. 빌드 파일 업로드 (Azure 배포 시 사용)
      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-app
          path: .next/standalone

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'

    steps:
      # ✅ 1. 빌드된 Next.js 앱 다운로드
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: nextjs-app

      # ✅ 2. Azure Web App에 배포
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'nero-front'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_5E8997761B4F4CB89641E6137F16BD6D }}
          package: '.'
